/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
bool RobotMap::disableautonomous = true;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SmartCANJaguar* RobotMap::driveTrainRightBack = NULL;
SmartCANJaguar* RobotMap::driveTrainLeftBack = NULL;
SmartCANJaguar* RobotMap::driveTrainRightFront = NULL;
SmartCANJaguar* RobotMap::driveTrainLeftFront = NULL;
SmartGyro* RobotMap::driveTrainGyro = NULL;
Solenoid* RobotMap::launcherSolenoid = NULL;
SmartCANJaguar* RobotMap::collectorRightRoller = NULL;
SmartCANJaguar* RobotMap::collectorLeftRoller = NULL;
Servo* RobotMap::collectorAngleAdjuster = NULL;
DigitalInput* RobotMap::collectorHighLimit = NULL;
DigitalInput* RobotMap::collectorLowLimit = NULL;
StallableAnalogEncoder* RobotMap::collectorElevationEncoder = NULL;
DoubleSolenoid* RobotMap::shifterDoubleSolenoid = NULL;
Compressor* RobotMap::airCompressorCompressor = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SmartCANJaguarSeries* RobotMap::collectorRollers = NULL;
AnalogPressureTransducer* RobotMap::launcherLowPressureSwitch = NULL;
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	driveTrainRightBack = new SmartCANJaguar(4);
	
	
	driveTrainLeftBack = new SmartCANJaguar(3);
	
	
	driveTrainRightFront = new SmartCANJaguar(5);
	
	
	driveTrainLeftFront = new SmartCANJaguar(2);
	
	
	driveTrainGyro = new SmartGyro(1, 1);
	lw->AddSensor("Drive Train", "Gyro", driveTrainGyro);
	driveTrainGyro->SetSensitivity(0.007);
	launcherSolenoid = new Solenoid(1, 1);
	lw->AddActuator("Launcher", "Solenoid", launcherSolenoid);
	
	collectorRightRoller = new SmartCANJaguar(6);
	
	
	collectorLeftRoller = new SmartCANJaguar(7);
	
	
	collectorAngleAdjuster = new Servo(1, 1);
	lw->AddActuator("Collector", "Angle Adjuster", collectorAngleAdjuster);
	
	collectorHighLimit = new DigitalInput(1, 2);
	lw->AddSensor("Collector", "High Limit", collectorHighLimit);
	
	collectorLowLimit = new DigitalInput(1, 3);
	lw->AddSensor("Collector", "Low Limit", collectorLowLimit);
	
	collectorElevationEncoder = new StallableAnalogEncoder(1, 2);
	lw->AddSensor("Collector", "ElevationEncoder", collectorElevationEncoder);
	
	shifterDoubleSolenoid = new DoubleSolenoid(1, 2, 3);      
	
	
	airCompressorCompressor = new Compressor(1, 1, 1, 1);
	
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	collectorRollers = new SmartCANJaguarSeries();
	collectorLeftRoller->Invert();
	collectorRollers->Add(2, collectorLeftRoller, collectorRightRoller);
	driveTrainGyro->SetGyroMode(SmartGyro::radians);
	// don't have hardware
	launcherLowPressureSwitch = new AnalogPressureTransducer(1, 4); 
}
