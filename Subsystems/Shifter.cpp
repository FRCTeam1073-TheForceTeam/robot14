/* FIRST Team 1073's RobaotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "Shifter.h"
#include "../Robotmap.h"
#include "../RobotStatus.h"
#define high DoubleSolenoid::kForward
#define off DoubleSolenoid::kOff
#define low DoubleSolenoid::kReverse
Shifter::Shifter() : Subsystem("Shifter") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	doubleSolenoid = RobotMap::shifterDoubleSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    lowGear = false;
}
    
void Shifter::InitDefaultCommand() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
void Shifter::SetLowGear() { Set(true); }
void Shifter::SetHighGear() { Set(false); }
void Shifter::Set(bool lowGear) {
	RobotStatus::SetShiftingStatus(lowGear ? RobotStatus::SHIFTER_LOW : RobotStatus::SHIFTER_HIGH);
	this->lowGear = lowGear;
	doubleSolenoid->Set(lowGear ? high : low);
	printf("Your current gear is");
	puts(lowGear ? "low" : "high");
}
bool Shifter::IsLowGear() {
	return lowGear;
}
//BEGIN DEBUG CODE
/*string Shifter::GetGearSetting(){
	if(doubleSolenoid->Get()==DoubleSolenoid::kForward){
		return "low";
	}
	if(doubleSolenoid->Get()==DoubleSolenoid::kReverse){
		return "high";
	}
	if(doubleSolenoid->Get()==DoubleSolenoid::kOff){
		return "off";
	}
	return 0;
}
void Shifter::Shift(){
	bool changed=false;
	if(doubleSolenoid->Get()==DoubleSolenoid::kOff){
		doubleSolenoid->Set(DoubleSolenoid::kForward);
		changed=true;
	}
	if(doubleSolenoid->Get()==DoubleSolenoid::kForward&&!changed){
		doubleSolenoid->Set(DoubleSolenoid::kReverse);
		changed=true;
	}
	if(doubleSolenoid->Get()==DoubleSolenoid::kReverse&&!changed)
		doubleSolenoid->Set(DoubleSolenoid::kForward);
}*/
//END DEBUG CODE
bool Shifter::isTheShifterReady(){
	return((doubleSolenoid->Get()==DoubleSolenoid::kForward)||(doubleSolenoid->Get()==DoubleSolenoid::kReverse));
}
