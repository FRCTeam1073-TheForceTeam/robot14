/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#ifndef BLING_H
#define BLING_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "../WPILibExtensions/WPILibExtensions.h"
class Bling: public Subsystem {
public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	Bling();
	typedef enum PATTERN {
		OFF,
		BLUE_SOLID,
		BLUE_BLINKING,
		GREEN_SOLID,
		GREEN_BLINKING,
		RAINBOW_EXPLOSION,
		// error
		RED_BLINKING,
		// autonomous
		PURPLE_SOLID,
		PURPLE_BLINKING,
	};
	void SetPattern(PATTERN pattern);
	void Execute();
private:
	bool wasBlinking;
	SPI* blong;
	void RainbowExplosion();
	PATTERN pattern;
	void LightNth(int ledNumber, int red, int green, int blue);
	void DispClear();
	void ClearStrip();
	void DispColor(int r, int g, int b);
	void Blink(int r, int g, int b, int interval = 500);
	void RainbowColor(int pos);
	void TurnMeOn();
	static void InitializeBackgroundTask();
	// state variables for Rainbow Explosion
	int RBE_R, RBE_G, RBE_B;
	void SetStrip();
	const static int num_pixels = 64;
	void SetColor(int r, int g, int b);
};
#endif
