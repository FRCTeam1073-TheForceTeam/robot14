/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "Collector.h"
#include "../Robotmap.h"
Collector::Collector() : Subsystem("Collector") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	highLimit = RobotMap::collectorHighLimit;
	lowLimit = RobotMap::collectorLowLimit;
	leftRoller = RobotMap::collectorLeftRoller;
	rightRoller = RobotMap::collectorRightRoller;
	angleAdjuster = RobotMap::collectorAngleAdjuster;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
void Collector::InitDefaultCommand() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
void Collector::Elevate(bool dir){
	if(dir && CanMoveElevatorUp())
		angleAdjuster->Set(1.0f);
	else if(!dir && CanMoveElevatorDown())
		angleAdjuster->Set(-1.0f);
}
bool Collector::IsMaxHeight() {
	return LimitPressed(highLimit);
}
bool Collector::IsMinHeight() {
	return LimitPressed(lowLimit);
}
bool Collector::CanMoveElevatorUp() {
    return CanMoveElevator(true);
}
bool Collector::CanMoveElevatorDown() {
    return CanMoveElevator(false);
}
bool Collector::CanMoveElevator(bool dir) {
	//false = down, true = up
	bool limit;
	if(!dir)
		limit = LimitPressed(lowLimit);
	else
		limit = LimitPressed(highLimit);
	return limit || elevationEncoder->IsStall();
}
void Collector::Collect(bool dir){
	//false = purge, true = collect
	if(dir){
		leftRoller->Set(1.0f);
		rightRoller->Set(-1.0f);
	}
	else if(!dir){
		leftRoller->Set(-1.0f);
		rightRoller->Set(1.0f);
	}
}
void Collector::StopRollers(){
	leftRoller->Set(0.0f);
	rightRoller->Set(0.0f);
}
