/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "DumbDriveForwardUntilTimeout.h"
#define DRIVE_AFTER_FIRST_SHOT "DriveAfterFirstShot"
DumbDriveForwardUntilTimeout::DumbDriveForwardUntilTimeout() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	doThisCommand = Robot::prefs->GetFloat(DRIVE_AFTER_FIRST_SHOT, true);
	SetTimeout(2.0);
}
// Called just before this Command runs the first time
void DumbDriveForwardUntilTimeout::Initialize() {
	if (doThisCommand)
		Robot::driveTrain->MecanumDriveAction(0,1,0);
}
// Called repeatedly when this Command is scheduled to run
void DumbDriveForwardUntilTimeout::Execute() {
	if (doThisCommand)
		Robot::driveTrain->MecanumDriveAction(0,1,0);
}

// Make this return true when this Command no longer needs to run execute()
bool DumbDriveForwardUntilTimeout::IsFinished() {
	return !doThisCommand || IsTimedOut();
}
// Called once after isFinished returns true
void DumbDriveForwardUntilTimeout::End() {
	Robot::driveTrain->StopMotors();
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DumbDriveForwardUntilTimeout::Interrupted() {
	End();
}
